openapi: 3.0.0
info:
  title: Petstore API
  version: 1.0.0
  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI specification

servers:
  - url: https://petstore.swagger.io/v1
    description: Production server
  - url: https://petstore.swagger.io/sandbox
    description: Sandbox server

paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      parameters:
        - name: api_key
          in: header
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          schema:
            type: integer
            format: int32
            maximum: 100
            default: 20
      responses:
        '200':
          description: A list of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - name
                  properties:
                    id:
                      type: integer
                      format: int64
                    name:
                      type: string
                    tag:
                      type: string
                    category:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                        name:
                          type: string
                        parent:
                          $$circular_ref: '#/components/schemas/Category'
                    status:
                      type: string
                      enum:
                        - available
                        - pending
                        - sold
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
    
    post:
      summary: Create a pet
      operationId: createPet
      parameters:
        - name: api_key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - name
              properties:
                id:
                  type: integer
                  format: int64
                name:
                  type: string
                tag:
                  type: string
                category:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    name:
                      type: string
                    parent:
                      $$circular_ref: '#/components/schemas/Category'
                    status:
                      type: string
                      enum:
                        - available
                        - pending
                        - sold
      responses:
        '201':
          description: Pet created successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
                  tag:
                    type: string
                  category:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                      name:
                        type: string
                      parent:
                        $$circular_ref: '#/components/schemas/Category'
                      status:
                        type: string
                        enum:
                          - available
                          - pending
                          - sold
  
  /pets/{petId}:
    parameters:
      - name: petId
        in: path
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get pet by ID
      operationId: getPetById
      responses:
        '200':
          description: Pet found
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
                  tag:
                    type: string
                  category:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                      name:
                        type: string
                      parent:
                        $$circular_ref: '#/components/schemas/Category'
                      status:
                        type: string
                        enum:
                          - available
                          - pending
                          - sold
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
    
    put:
      summary: Update pet
      operationId: updatePet
      parameters:
        - name: api_key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - name
              properties:
                id:
                  type: integer
                  format: int64
                name:
                  type: string
                tag:
                  type: string
                category:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    name:
                      type: string
                    parent:
                      $$circular_ref: '#/components/schemas/Category'
                    status:
                      type: string
                      enum:
                        - available
                        - pending
                        - sold
      responses:
        '200':
          description: Pet found
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
                  tag:
                    type: string
                  category:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                      name:
                        type: string
                      parent:
                        $$circular_ref: '#/components/schemas/Category'
                      status:
                        type: string
                        enum:
                          - available
                          - pending
                          - sold
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
  
  /pets/{petId}/category:
    parameters:
      - name: petId
        in: path
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get pet's category
      operationId: getPetCategory
      responses:
        '200':
          description: Category found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
                  parent:
                    $$circular_ref: '#/components/schemas/Category'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string

  /store/orders:
    post:
      summary: Place a new order
      operationId: placeOrder
      parameters:
        - name: api_key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - petId
                - quantity
                - status
              properties:
                id:
                  type: integer
                  format: int64
                petId:
                  type: integer
                  format: int64
                quantity:
                  type: integer
                  minimum: 1
                shipDate:
                  type: string
                  format: date-time
                status:
                  type: string
                  enum:
                    - placed
                    - approved
                    - delivered
                    - cancelled
                pet:
                  type: object
                  required:
                    - id
                    - name
                  properties:
                    id:
                      type: integer
                      format: int64
                    name:
                      type: string
                    tag:
                      type: string
                    category:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                        name:
                          type: string
                        parent:
                          $$circular_ref: '#/components/schemas/Category'
                        status:
                          type: string
                          enum:
                            - available
                            - pending
                            - sold
      responses:
        '200':
          description: Order placed successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - petId
                  - quantity
                  - status
                properties:
                  id:
                    type: integer
                    format: int64
                  petId:
                    type: integer
                    format: int64
                  quantity:
                    type: integer
                    minimum: 1
                  shipDate:
                    type: string
                    format: date-time
                  status:
                    type: string
                    enum:
                      - placed
                      - approved
                      - delivered
                      - cancelled
                  pet:
                    type: object
                    required:
                      - id
                      - name
                    properties:
                      id:
                        type: integer
                        format: int64
                      name:
                        type: string
                      tag:
                        type: string
                      category:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                          name:
                            type: string
                          parent:
                            $$circular_ref: '#/components/schemas/Category'
                          status:
                            type: string
                            enum:
                              - available
                              - pending
                              - sold
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
  
  /store/orders/{orderId}:
    parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get order by ID
      operationId: getOrderById
      responses:
        '200':
          description: Order found
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - petId
                  - quantity
                  - status
                properties:
                  id:
                    type: integer
                    format: int64
                  petId:
                    type: integer
                    format: int64
                  quantity:
                    type: integer
                    minimum: 1
                  shipDate:
                    type: string
                    format: date-time
                  status:
                    type: string
                    enum:
                      - placed
                      - approved
                      - delivered
                      - cancelled
                  pet:
                    type: object
                    required:
                      - id
                      - name
                    properties:
                      id:
                        type: integer
                        format: int64
                      name:
                        type: string
                      tag:
                        type: string
                      category:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                          name:
                            type: string
                          parent:
                            $$circular_ref: '#/components/schemas/Category'
                          status:
                            type: string
                            enum:
                              - available
                              - pending
                              - sold
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: api_key

security:
  - ApiKeyAuth: [] 